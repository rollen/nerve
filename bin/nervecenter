#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander')
	, ncp = require('ncp').ncp
  , fs = require('fs');

// CLI

program
  .parse(process.argv);

// Path

var path = program.args.shift() || '.';


// Generate application

(function createApplication(path) {
  emptyDirectory(path, function(empty){
    if (empty || program.force) {
      createApplicationAt(path);
    } else {
      program.confirm('destination is not empty, continue? ', function(ok){
        if (ok) {
          process.stdin.destroy();
          createApplicationAt(path);
        } else {
          abort('aborting');
        }
      });
    }
  });
})(path);

/**
 * Create application at the given directory `path`.
 *
 * @param {String} path
 */

function createApplicationAt(path) {
  console.log();
  process.on('exit', function(){
    console.log();
    console.log('   install dependencies:');
    console.log('     $ cd %s && npm install', path);
    console.log();
    console.log('   run the app:');
    console.log('     $ node app');
    console.log();
  });

  
	var source = __dirname + '/../sampleapp'
	var destination = path
  console.log('Copying files from folder ' + source + ' to ' + destination);

	 var filter = function(name){
		return !(new RegExp('\/node_modules').test(name));
	}

	ncp(source, destination, {filter:filter}, function (err) {
		if (err) {
			return console.error(err);
		}
		console.log('done!');
	});

}

/**
 * Check if the given directory `path` is empty.
 *
 * @param {String} path
 * @param {Function} fn
 */

function emptyDirectory(path, fn) {
  fs.readdir(path, function(err, files){
    if (err && 'ENOENT' != err.code) throw err;
    fn(!files || !files.length);
  });
}

/**
 * Exit with the given `str`.
 *
 * @param {String} str
 */

function abort(str) {
  console.error(str);
  process.exit(1);
}
